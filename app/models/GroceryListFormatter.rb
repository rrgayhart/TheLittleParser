class GroceryListFormatter

def self.normal
  ['Allspice', 
  'Black Peppercorns',
  'Arrowroot starch',
  'Basil',
  'Bay Leaves',
  'Chili powder',
  'Cinnamon',
  'Garlic',
  'Red Wine Vinegar',
  'Coriander',
  'Cream of tartar',
  'Cumin',
  'Curry',
  'Dill',
  'Fennel',
  'Five-spice powder',
  'Garlic powder',
  'Ginger',
  'Marjoram',
  'Mint',
  'Mustard',
  'Nutmeg',
  'Onion',
  'Oregano',
  'Paprika',
  'Pepper',
  'cayenne',
  'Peppercorns',
  'Poppy seeds',
  'Rosemary',
  'Sage',
  'Sesame seeds',
  'Tarragon',
  'Thyme',
  'Turmeric',
  'Vanilla',
  'Baking Powder',
  'Baking Soda',
  'Brown Sugar',
  'Brownie Mix',
  'Cake Mix',
  'Cocoa',
  'Cornstarch',
  'Flour',
  'Sugar',
  'Vanilla Extract',
  'Bread Crumbs',
  'Biscuits',
  'Bread',
  'Buns',
  'Rolls',
  'Soup',
  'Canned Tuna',
  'BBQ Sauce',
  'Cooking Spray',
  'Honey',
  'Horseradish',
  'Hot sauce',
  'Jelly',
  'Ketchup',
  'Mayonnaise',
  'Mustard',
  'Olive Oil',
  'Peanut Butter',
  'Salad Dressing',
  'Salsa',
  'Soy Sauce',
  'Vegetable Oil',
  'Worcestershire',
  'Dairy',
  'Butter',
  'Cheese',
  'Cottage Cheese',
  'Cream',
  'Cream Cheese',
  'Eggs',
  'Milk',
  'Sour Cream',
  'Yogurt',
  'Water',
  'Coffee',
  'Juice',
  'Soda Pop',
  'Sports Drinks',
  'Tea',
  'French Fries',
  'Frozen Vegetables',
  'Ice Cream',
  'Pizza',
  'Pasta',
  'Rice',
  'Spaghetti Sauce',
  'Meats',
  'Beef',
  'Chicken',
  'Fish',
  'Pork',
  'Apple',
  'Asparagus',
  'Bananas',
  'Berries',
  'Broccoli',
  'Cabbage',
  'Carrots',
  'Cauliflower',
  'Celery',
  'Corn',
  'Garlic',
  'Grapes',
  'Lemons',
  'Bacon',
  'Lettuce',
  'Limes',
  'Melons',
  'Mushrooms',
  'Nectarines',
  'Onions',
  'Oranges',
  'Peaches',
  'Pears',
  'Plums',
  'cornstarch',
  'rice wine vinegar',
  'sesame oil',
  'hoisin sauce',
  'Scallion',
  'Tomatoes']
end

def self.secondary
  [
    'Salt',
    'Cloves'
  ]
end

  def self.check_name(string)
    array = normal.select do |ingredient|
      string.downcase.singularize.include?(ingredient.downcase.singularize)
    end
    if array.any?
      array.first
    else
      check_secondary(string)
    end
  end

  def self.check_secondary(string)
    array = secondary.select do |ingredient|
      string.downcase.singularize.include?(ingredient.downcase.singularize)
    end.first
  end

end
